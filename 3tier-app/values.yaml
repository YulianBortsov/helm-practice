# Default values for 3tier-app.
# This is a YAML-formatted file.
# Declare variables to be passed into your templates.

# This is for the secretes for pulling an image from a private repository more information can be found here: https://kubernetes.io/docs/tasks/configure-pod-container/pull-image-private-registry/
imagePullSecrets: []
# This is to override the chart name.
nameOverride: ""
fullnameOverride: ""

#This section builds out the service account more information can be found here: https://kubernetes.io/docs/concepts/security/service-accounts/
serviceAccount:
  # Specifies whether a service account should be created
  create: true
  # Automatically mount a ServiceAccount's API credentials?
  automount: true
  # Annotations to add to the service account
  annotations: {}
  # The name of the service account to use.
  # If not set and create is true, a name is generated using the fullname template
  name: ""

securityContext: {}
  # capabilities:
  #   drop:
  #   - ALL
  # readOnlyRootFilesystem: true
  # runAsNonRoot: true
  # runAsUser: 1000

# This block is for setting up the ingress for more information can be found here: https://kubernetes.io/docs/concepts/services-networking/ingress/
ingress:
  enabled: false
  className: ""
  annotations: {}
    # kubernetes.io/ingress.class: nginx
    # kubernetes.io/tls-acme: "true"
  hosts:
    - host: chart-example.local
      paths:
        - path: /
          pathType: ImplementationSpecific
  tls: []
  #  - secretName: chart-example-tls
  #    hosts:
  #      - chart-example.local

resources: {}
  # We usually recommend not to specify default resources and to leave this as a conscious
  # choice for the user. This also increases chances charts run on environments with little
  # resources, such as Minikube. If you do want to specify resources, uncomment the following
  # lines, adjust them as necessary, and remove the curly braces after 'resources:'.
  # limits:
  #   cpu: 100m
  #   memory: 128Mi
  # requests:
  #   cpu: 100m
  #   memory: 128Mi

#This section is for setting up autoscaling more information can be found here: https://kubernetes.io/docs/concepts/workloads/autoscaling/
autoscaling:
  enabled: false
  minReplicas: 1
  maxReplicas: 100
  targetCPUUtilizationPercentage: 80
  # targetMemoryUtilizationPercentage: 80




localPort: 50505

frontend:
  image:
    repository: nginx
    tag: latest
    pullPolicy: IfNotPresent
  replicaCount: 2
  service:
    type: ClusterIP
    port: 80
  ingress:
    enabled: True
    host: web-app.local
  staticcmName: frontend-static-files
  volumes:
    - name: frontend-static-files
      configMap:
        name: frontend-static-files
  volumeMounts:
    - name: frontend-static-files
      mountPath: /usr/share/nginx/html



backend:
  image:
    repository: python
    tag: "3.13.1-slim"
    pullPolicy: IfNotPresent
  replicaCount: 2
  service:
    type: ClusterIP
    port: 5000
  env:
    DATABASE_USER: user
    DATABASE_NAME: app_db
  livenessProbe:
    httpGet:
      path: /api
      port: 5000
    initialDelaySeconds: 7
    periodSeconds: 10
    failureThreshold: 5
  readinessProbe:
    httpGet:
      path: /api
      port: 5000
    initialDelaySeconds: 7
    periodSeconds: 10
  appcmName: app-cm-backend
  requirementscmName: requirements-cm-backend
  volumes:
    - name: app-cm-backend
      configMap:
        name: app-cm-backend
    - name: requirements-cm-backend
      configMap:
        name: requirements-cm-backend
  volumeMounts:
    - name: app-cm-backend
      mountPath: /app/app.py
      subPath: app.py
    - name: requirements-cm-backend
      mountPath: /app/requirements.txt
      subPath: requirements.txt


postgresql:
  auth:
    username: user
    database: app_db
    existingSecret: postgres-pass
    secretKeys:
      userPasswordKey: db-pass
      adminPasswordKey: db-admin-pass
  primary:
    persistence:
      enabled: true
      size: 500Mi

secretStore:
  remoteRefKey: 3tier/postgresql
  remoteRefProperty: 3tier-app-postgres-pass
  remoteRefPropertyAdmin: 3tier-app-postgres-admin-pass
  awscred: aws-credentials
  region: us-east-1  
