apiVersion: apps/v1
kind: Deployment
metadata:
  annotations:
    deployment.kubernetes.io/revision: "2"
    meta.helm.sh/release-name: webapp
    meta.helm.sh/release-namespace: default
  creationTimestamp: "2024-12-02T13:17:52Z"
  generation: 2
  labels:
    app: webapp
    app.kubernetes.io/managed-by: Helm
    chart: webapp
    environment: Development
    version: 0.1.0
  name: webapp
  namespace: default
  resourceVersion: "153259"
  uid: dcaf81fb-05e9-4fe7-b412-bea6c33746bf
spec:
  progressDeadlineSeconds: 600
  replicas: 1
  revisionHistoryLimit: 10
  selector:
    matchLabels:
      app: webapp
  strategy:
    rollingUpdate:
      maxSurge: 25%
      maxUnavailable: 25%
    type: RollingUpdate
  template:
    metadata:
      creationTimestamp: null
      labels:
        app: webapp
    spec:
      containers:
      - args:
        - |
          pip install flask redis &&
          python /app/app.py
        command:
        - sh
        - -c
        env:
        - name: REDIS_ENABLED
          value: "true"
        - name: REDIS_HOST
          value: webapp-redis-master
        - name: REDIS_PORT
          value: "6379"
        - name: REDIS_PASSWORD
          value: redispass
        image: python:3.9-slim
        imagePullPolicy: IfNotPresent
        livenessProbe:
          failureThreshold: 3
          httpGet:
            path: /
            port: 8080
            scheme: HTTP
          periodSeconds: 10
          successThreshold: 1
          timeoutSeconds: 1
        name: webapp
        ports:
        - containerPort: 8080
          name: http
          protocol: TCP
        readinessProbe:
          failureThreshold: 3
          httpGet:
            path: /
            port: 8080
            scheme: HTTP
          periodSeconds: 10
          successThreshold: 1
          timeoutSeconds: 1
        resources: {}
        securityContext: {}
        terminationMessagePath: /dev/termination-log
        terminationMessagePolicy: File
        volumeMounts:
        - mountPath: /app
          name: app-script
      dnsPolicy: ClusterFirst
      restartPolicy: Always
      schedulerName: default-scheduler
      securityContext: {}
      serviceAccount: webapp
      serviceAccountName: webapp
      terminationGracePeriodSeconds: 30
      volumes:
      - configMap:
          defaultMode: 420
          name: webapp-config
        name: app-script
status:
  availableReplicas: 1
  conditions:
  - lastTransitionTime: "2024-12-03T09:45:02Z"
    lastUpdateTime: "2024-12-03T09:45:02Z"
    message: Deployment has minimum availability.
    reason: MinimumReplicasAvailable
    status: "True"
    type: Available
  - lastTransitionTime: "2024-12-02T13:17:52Z"
    lastUpdateTime: "2024-12-03T13:05:36Z"
    message: ReplicaSet "webapp-695f547774" has successfully progressed.
    reason: NewReplicaSetAvailable
    status: "True"
    type: Progressing
  observedGeneration: 2
  readyReplicas: 1
  replicas: 1
  updatedReplicas: 1
